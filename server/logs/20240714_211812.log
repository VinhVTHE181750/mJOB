[2024-07-14 21:01:31] [INFO] [Logger] Logger initialized
[2024-07-14 21:01:31] [INFO] [sequelize] Connecting to database...
[2024-07-14 21:01:31] [INFO] [sequelize] Syncing tables...
[2024-07-14 21:01:31] [INFO] [Socket] Socket.io server initialized
[2024-07-14 21:01:31] [INFO] [Server] Server is running on port 8000
[2024-07-14 21:01:31] [INFO] [DBContext] Connected to MSSQL
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'Users' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[Users]', 'U') IS NULL CREATE TABLE [dbo].[Users] ([id] INTEGER NOT NULL IDENTITY(1,1) , [username] NVARCHAR(255) NOT NULL, [email] NVARCHAR(255) NULL, [phone] NVARCHAR(255) NULL, [citizenId] NVARCHAR(255) NULL, [firstName] NVARCHAR(255) NULL, [lastName] NVARCHAR(255) NULL, [dob] DATETIMEOFFSET NULL, [address] NVARCHAR(255) NULL, [avatar] NVARCHAR(255) NULL, [bio] NVARCHAR(255) NULL, [isStudent] BIT DEFAULT 0, [isMuted] BIT DEFAULT 0, [createdAt] DATETIMEOFFSET NOT NULL, [updatedAt] DATETIMEOFFSET NOT NULL, PRIMARY KEY ([id]));
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[Users]';
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'Auths' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[Auths]', 'U') IS NULL CREATE TABLE [dbo].[Auths] ([id] INTEGER NOT NULL IDENTITY(1,1) , [hash] NVARCHAR(128) NULL, [salt] NVARCHAR(64) NOT NULL, [role] VARCHAR(255) CHECK ([role] IN(N'USER', N'SUPPORT', N'MOD', N'ADMIN')), [code] NVARCHAR(6) NULL, [isActivated] BIT DEFAULT 0, [isLocked] BIT DEFAULT 0, [lockExpires] DATETIMEOFFSET NULL, [isOnline] BIT DEFAULT 0, [lastOnline] DATETIMEOFFSET NULL, [createdAt] DATETIMEOFFSET NOT NULL, [updatedAt] DATETIMEOFFSET NOT NULL, [UserId] INTEGER NULL, PRIMARY KEY ([id]), FOREIGN KEY ([UserId]) REFERENCES [dbo].[Users] ([id]) ON DELETE SET NULL);
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[Auths]';
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'PostCategories' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[PostCategories]', 'U') IS NULL CREATE TABLE [dbo].[PostCategories] ([id] INTEGER NOT NULL IDENTITY(1,1) , [name] NVARCHAR(255) NOT NULL, [fgColor] NVARCHAR(6) NOT NULL, [bgColor] NVARCHAR(6) NOT NULL, [enabled] BIT NOT NULL DEFAULT 0, [createdAt] DATETIMEOFFSET NOT NULL, [updatedAt] DATETIMEOFFSET NOT NULL, PRIMARY KEY ([id]));
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[PostCategories]';
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'Posts' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[Posts]', 'U') IS NULL CREATE TABLE [dbo].[Posts] ([id] INTEGER NOT NULL IDENTITY(1,1) , [title] NVARCHAR(255) NOT NULL, [content] NVARCHAR(255) NOT NULL, [tags] NVARCHAR(255) NULL, [status] VARCHAR(255) CHECK ([status] IN(N'PUBLISHED', N'DRAFT', N'DELISTED')), [createdAt] DATETIMEOFFSET NOT NULL, [updatedAt] DATETIMEOFFSET NOT NULL, [deletedAt] DATETIMEOFFSET NULL, [PostCategoryId] INTEGER NULL, [UserId] INTEGER NULL, PRIMARY KEY ([id]), FOREIGN KEY ([PostCategoryId]) REFERENCES [dbo].[PostCategories] ([id]) ON DELETE SET NULL, FOREIGN KEY ([UserId]) REFERENCES [dbo].[Users] ([id]) ON DELETE SET NULL);
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[Posts]';
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'Comments' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[Comments]', 'U') IS NULL CREATE TABLE [dbo].[Comments] ([id] INTEGER NOT NULL IDENTITY(1,1) , [content] NVARCHAR(255) NULL, [createdAt] DATETIMEOFFSET NOT NULL, [updatedAt] DATETIMEOFFSET NOT NULL, [deletedAt] DATETIMEOFFSET NULL, [PostId] INTEGER NULL, [UserId] INTEGER NULL, PRIMARY KEY ([id]), FOREIGN KEY ([PostId]) REFERENCES [dbo].[Posts] ([id]) ON DELETE SET NULL, FOREIGN KEY ([UserId]) REFERENCES [dbo].[Users] ([id]) ON DELETE SET NULL);
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[Comments]';
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'CommentLikes' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[CommentLikes]', 'U') IS NULL CREATE TABLE [dbo].[CommentLikes] ([id] INTEGER NOT NULL IDENTITY(1,1) , [isDislike] BIT NULL, [createdAt] DATETIMEOFFSET NOT NULL, [CommentId] INTEGER NULL, [UserId] INTEGER NULL, PRIMARY KEY ([id]), FOREIGN KEY ([CommentId]) REFERENCES [dbo].[Comments] ([id]) ON DELETE SET NULL, FOREIGN KEY ([UserId]) REFERENCES [dbo].[Users] ([id]) ON DELETE SET NULL);
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[CommentLikes]';
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'CommentMetrics' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[CommentMetrics]', 'U') IS NULL CREATE TABLE [dbo].[CommentMetrics] ([CommentId] INTEGER NOT NULL , [day] DATE NOT NULL , [likes] INTEGER NULL, [dislikes] INTEGER NULL, PRIMARY KEY ([CommentId], [day]), FOREIGN KEY ([CommentId]) REFERENCES [Comments] ([id]) ON DELETE CASCADE);
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[CommentMetrics]';
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'PostLikes' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[PostLikes]', 'U') IS NULL CREATE TABLE [dbo].[PostLikes] ([id] INTEGER NOT NULL IDENTITY(1,1) , [isDislike] BIT NULL, [createdAt] DATETIMEOFFSET NOT NULL, [PostId] INTEGER NULL, [UserId] INTEGER NULL, PRIMARY KEY ([id]), FOREIGN KEY ([PostId]) REFERENCES [dbo].[Posts] ([id]) ON DELETE SET NULL, FOREIGN KEY ([UserId]) REFERENCES [dbo].[Users] ([id]) ON DELETE SET NULL);
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[PostLikes]';
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'CategoryMetrics' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[CategoryMetrics]', 'U') IS NULL CREATE TABLE [dbo].[CategoryMetrics] ([PostCategoryId] INTEGER NOT NULL , [day] DATE NOT NULL , [usage] INTEGER DEFAULT 0, [createdAt] DATETIMEOFFSET NOT NULL, PRIMARY KEY ([PostCategoryId], [day]), FOREIGN KEY ([PostCategoryId]) REFERENCES [PostCategories] ([id]) ON DELETE CASCADE);
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[CategoryMetrics]';
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'PostTags' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:31] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[PostTags]', 'U') IS NULL CREATE TABLE [dbo].[PostTags] ([id] INTEGER NOT NULL IDENTITY(1,1) , [name] NVARCHAR(255) NULL, [createdAt] DATETIMEOFFSET NOT NULL, PRIMARY KEY ([id]));
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[PostTags]';
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'TagMetrics' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[TagMetrics]', 'U') IS NULL CREATE TABLE [dbo].[TagMetrics] ([id] INTEGER NOT NULL IDENTITY(1,1) , [day] DATE NOT NULL, [usage] INTEGER DEFAULT 0, [createdAt] DATETIMEOFFSET NOT NULL, [PostTagId] INTEGER NULL, PRIMARY KEY ([id]), FOREIGN KEY ([PostTagId]) REFERENCES [dbo].[PostTags] ([id]) ON DELETE SET NULL);
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[TagMetrics]';
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'PostHistories' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[PostHistories]', 'U') IS NULL CREATE TABLE [dbo].[PostHistories] ([id] INTEGER NOT NULL IDENTITY(1,1) , [title] NVARCHAR(255) NOT NULL, [content] NVARCHAR(MAX) NOT NULL, [tags] NVARCHAR(255) NULL, [action] VARCHAR(255) CHECK ([action] IN(N'CREATE', N'UPDATE', N'DELETE', N'DRAFT', N'DELIST', N'PUBLISH')), [status] VARCHAR(255) CHECK ([status] IN(N'DRAFT', N'PUBLISHED', N'DELISTED')), [PostCategoryId] INTEGER NOT NULL, [UserId] INTEGER NOT NULL, [PostId] INTEGER NOT NULL, [createdAt] DATETIMEOFFSET NOT NULL, PRIMARY KEY ([id]), FOREIGN KEY ([PostCategoryId]) REFERENCES [PostCategories] ([id]) ON DELETE CASCADE, FOREIGN KEY ([UserId]) REFERENCES [Users] ([id]), FOREIGN KEY ([PostId]) REFERENCES [Posts] ([id]) ON DELETE CASCADE);
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[PostHistories]';
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'PostMetrics' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[PostMetrics]', 'U') IS NULL CREATE TABLE [dbo].[PostMetrics] ([PostId] INTEGER NOT NULL , [day] DATE NOT NULL , [likes] INTEGER NULL, [dislikes] INTEGER NULL, [comments] INTEGER NULL, [views] INTEGER NULL, PRIMARY KEY ([PostId], [day]), FOREIGN KEY ([PostId]) REFERENCES [Posts] ([id]) ON DELETE CASCADE);
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[PostMetrics]';
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'PublicChatRooms' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[PublicChatRooms]', 'U') IS NULL CREATE TABLE [dbo].[PublicChatRooms] ([id] INTEGER NOT NULL IDENTITY(1,1) , [name] NVARCHAR(255) NOT NULL, [isLocked] BIT DEFAULT 0, [requiredRole] VARCHAR(255) CHECK ([requiredRole] IN(N'USER', N'STAFF', N'SUPPORT', N'ADMIN')), [createdAt] DATETIMEOFFSET NOT NULL, [updatedAt] DATETIMEOFFSET NOT NULL, PRIMARY KEY ([id]));
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[PublicChatRooms]';
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'PublicRoomUsers' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[PublicRoomUsers]', 'U') IS NULL CREATE TABLE [dbo].[PublicRoomUsers] ([id] INTEGER IDENTITY(1,1) , [UserId] INTEGER NULL, [PublicChatRoomId] INTEGER NULL, CONSTRAINT [PublicRoomUsers_PublicChatRoomId_UserId_unique] UNIQUE ([UserId], [PublicChatRoomId]), PRIMARY KEY ([id]), FOREIGN KEY ([UserId]) REFERENCES [dbo].[Users] ([id]) ON DELETE CASCADE, FOREIGN KEY ([PublicChatRoomId]) REFERENCES [dbo].[PublicChatRooms] ([id]) ON DELETE CASCADE);
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[PublicRoomUsers]';
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'PublicChatMessages' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[PublicChatMessages]', 'U') IS NULL CREATE TABLE [dbo].[PublicChatMessages] ([id] INTEGER IDENTITY(1,1) , [content] NVARCHAR(MAX) NOT NULL, [createdAt] DATETIMEOFFSET NOT NULL, [deletedAt] DATETIMEOFFSET NULL, [PublicRoomUserId] INTEGER NULL, PRIMARY KEY ([id]), FOREIGN KEY ([PublicRoomUserId]) REFERENCES [dbo].[PublicRoomUsers] ([id]) ON DELETE SET NULL);
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[PublicChatMessages]';
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'PublicChatMetrics' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[PublicChatMetrics]', 'U') IS NULL CREATE TABLE [dbo].[PublicChatMetrics] ([RoomId] INTEGER NOT NULL , [day] DATE NOT NULL , [messages] INTEGER DEFAULT 0, [users] INTEGER DEFAULT 0, [createdAt] DATETIMEOFFSET NOT NULL, [updatedAt] DATETIMEOFFSET NOT NULL, [PublicChatRoomId] INTEGER NULL, PRIMARY KEY ([RoomId], [day]), FOREIGN KEY ([RoomId]) REFERENCES [PublicChatRooms] ([id]), FOREIGN KEY ([PublicChatRoomId]) REFERENCES [dbo].[PublicChatRooms] ([id]) ON DELETE SET NULL);
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[PublicChatMetrics]';
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'Balances' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[Balances]', 'U') IS NULL CREATE TABLE [dbo].[Balances] ([id] INTEGER NOT NULL IDENTITY(1,1) , [balance] DECIMAL(10,2) NOT NULL DEFAULT 0, [createdAt] DATETIMEOFFSET NOT NULL, [updatedAt] DATETIMEOFFSET NOT NULL, [UserId] INTEGER NULL, PRIMARY KEY ([id]), FOREIGN KEY ([UserId]) REFERENCES [dbo].[Users] ([id]) ON DELETE SET NULL);
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[Balances]';
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = N'WorkExperiences' AND TABLE_SCHEMA = N'dbo'
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): IF OBJECT_ID('[dbo].[WorkExperiences]', 'U') IS NULL CREATE TABLE [dbo].[WorkExperiences] ([id] INTEGER NOT NULL IDENTITY(1,1) , [title] NVARCHAR(255) NOT NULL, [company] NVARCHAR(255) NOT NULL, [location] NVARCHAR(255) NOT NULL, [startDate] DATETIMEOFFSET NOT NULL, [endDate] DATETIMEOFFSET NULL, [description] NVARCHAR(255) NOT NULL, [createdAt] DATETIMEOFFSET NOT NULL, [updatedAt] DATETIMEOFFSET NOT NULL, [UserId] INTEGER NULL, PRIMARY KEY ([id]), FOREIGN KEY ([UserId]) REFERENCES [dbo].[Users] ([id]) ON DELETE SET NULL);
[2024-07-14 21:01:32] [DEBUG] [sequelize] Executing (default): EXEC sys.sp_helpindex @objname = N'[dbo].[WorkExperiences]';
[2024-07-14 21:03:20] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
[2024-07-14 21:03:20] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:03:20] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:03:20] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
[2024-07-14 21:03:25] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
[2024-07-14 21:03:25] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:03:25] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
[2024-07-14 21:03:25] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:04:14] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
[2024-07-14 21:04:14] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:04:14] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:04:14] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
[2024-07-14 21:04:32] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
[2024-07-14 21:04:32] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:04:32] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:04:32] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
[2024-07-14 21:06:40] [DEBUG] [sequelize] Executing (default): SELECT [id], [username], [email], [phone], [citizenId], [firstName], [lastName], [dob], [address], [avatar], [bio], [isStudent], [isMuted], [createdAt], [updatedAt] FROM [dbo].[Users] AS [User] WHERE [User].[id] = N'1';
[2024-07-14 21:06:40] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
[2024-07-14 21:06:40] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:06:40] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:06:40] [DEBUG] [sequelize] Executing (default): SELECT [id], [username], [email], [phone], [citizenId], [firstName], [lastName], [dob], [address], [avatar], [bio], [isStudent], [isMuted], [createdAt], [updatedAt] FROM [dbo].[Users] AS [User] WHERE [User].[id] = N'1';
[2024-07-14 21:06:40] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
[2024-07-14 21:06:46] [DEBUG] [sequelize] Executing (default): SELECT [id], [username], [email], [phone], [citizenId], [firstName], [lastName], [dob], [address], [avatar], [bio], [isStudent], [isMuted], [createdAt], [updatedAt] FROM [dbo].[Users] AS [User] WHERE [User].[id] = N'1';
[2024-07-14 21:06:46] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
[2024-07-14 21:06:46] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:06:46] [DEBUG] [sequelize] Executing (default): SELECT [id], [username], [email], [phone], [citizenId], [firstName], [lastName], [dob], [address], [avatar], [bio], [isStudent], [isMuted], [createdAt], [updatedAt] FROM [dbo].[Users] AS [User] WHERE [User].[id] = N'1';
[2024-07-14 21:06:46] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
[2024-07-14 21:06:46] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:06:51] [DEBUG] [sequelize] Executing (default): SELECT [id], [username], [email], [phone], [citizenId], [firstName], [lastName], [dob], [address], [avatar], [bio], [isStudent], [isMuted], [createdAt], [updatedAt] FROM [dbo].[Users] AS [User] WHERE [User].[id] = N'2';
[2024-07-14 21:06:51] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
[2024-07-14 21:06:51] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:06:51] [DEBUG] [sequelize] Executing (default): SELECT [id], [username], [email], [phone], [citizenId], [firstName], [lastName], [dob], [address], [avatar], [bio], [isStudent], [isMuted], [createdAt], [updatedAt] FROM [dbo].[Users] AS [User] WHERE [User].[id] = N'2';
[2024-07-14 21:06:51] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
[2024-07-14 21:06:51] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:17:03] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
[2024-07-14 21:17:03] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:17:03] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:17:03] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
[2024-07-14 21:18:06] [DEBUG] [sequelize] Executing (default): SELECT [id], [username], [email], [phone], [citizenId], [firstName], [lastName], [dob], [address], [avatar], [bio], [isStudent], [isMuted], [createdAt], [updatedAt] FROM [dbo].[Users] AS [User] WHERE [User].[username] = N'datdv2003' ORDER BY [User].[id] OFFSET 0 ROWS FETCH NEXT 1 ROWS ONLY;
[2024-07-14 21:18:06] [DEBUG] [sequelize] Executing (default): INSERT INTO [dbo].[Users] ([username],[isStudent],[isMuted],[createdAt],[updatedAt]) OUTPUT INSERTED.[id],INSERTED.[username],INSERTED.[email],INSERTED.[phone],INSERTED.[citizenId],INSERTED.[firstName],INSERTED.[lastName],INSERTED.[dob],INSERTED.[address],INSERTED.[avatar],INSERTED.[bio],INSERTED.[isStudent],INSERTED.[isMuted],INSERTED.[createdAt],INSERTED.[updatedAt] VALUES (@0,@1,@2,@3,@4);
[2024-07-14 21:18:06] [DEBUG] [sequelize] Executing (default): INSERT INTO [dbo].[Auths] ([hash],[salt],[role],[isActivated],[isLocked],[isOnline],[createdAt],[updatedAt],[UserId]) OUTPUT INSERTED.[id],INSERTED.[hash],INSERTED.[salt],INSERTED.[role],INSERTED.[code],INSERTED.[isActivated],INSERTED.[isLocked],INSERTED.[lockExpires],INSERTED.[isOnline],INSERTED.[lastOnline],INSERTED.[createdAt],INSERTED.[updatedAt],INSERTED.[UserId] VALUES (@0,@1,@2,@3,@4,@5,@6,@7,@8);
[2024-07-14 21:18:10] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:18:10] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
[2024-07-14 21:18:10] [DEBUG] [sequelize] Executing (default): SELECT [id], [name], [fgColor], [bgColor], [enabled], [createdAt], [updatedAt] FROM [dbo].[PostCategories] AS [PostCategory];
[2024-07-14 21:18:10] [DEBUG] [sequelize] Executing (default): SELECT [id], [title], [content], [tags], [status], [createdAt], [updatedAt], [deletedAt], [PostCategoryId], [UserId] FROM [dbo].[Posts] AS [Post] WHERE ([Post].[deletedAt] IS NULL AND [Post].[status] = N'PUBLISHED');
